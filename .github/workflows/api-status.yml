name: Controllo API Status

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

permissions:
  contents: read # Imposta le autorizzazioni su sola lettura

jobs:
  check-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repository
        uses: actions/checkout@v3

      - name: Controllo stato dell'API
        id: check
        run: |
          HOST="smal82.netsons.org"
          PORT="443"
          TIMEOUT=5

          # Esegui nc e cattura il codice di uscita
          nc -z -w $TIMEOUT $HOST $PORT
          NC_EXIT_CODE="$?"

          # Verifica il codice di uscita di nc
          if [ "$NC_EXIT_CODE" -eq "0" ]; then
            echo "API ONLINE"
            echo "::set-output name=badge_color::green"
            echo "::set-output name=badge_message::Online"
          else
            echo "API OFFLINE (Errore: Porta chiusa o irraggiungibile)"
            echo "::set-output name=badge_color::red"
            echo "::set-output name=badge_message::Offline"
          fi

      - name: Genera URL del badge
        id: badge
        run: |
          BADGE_COLOR="${{ steps.check.outputs.badge_color }}"
          BADGE_MESSAGE="${{ steps.check.outputs.badge_message }}"
          echo "::set-output name=badge_url::https://img.shields.io/badge/API-$BADGE_MESSAGE-$BADGE_COLOR"

      - name: Stampa URL del badge
        run: |
          echo "Badge URL: ${{ steps.badge.outputs.badge_url }}"

      - name: Aggiorna README
        uses: actions/checkout@v3
      - name: Update README
        run: |
          BADGE_URL="${{ steps.badge.outputs.badge_url }}"
          echo "Updating README with Badge URL: $BADGE_URL"
          sed -i "s|!\\[API Status\\](.*)|!\\[API Status\\]($BADGE_URL)|g" README.md
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "Update API Status Badge"
          git push
